#!  

import json
import locale
import sys
import emails
import reports

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = 0
  max_sales_car = {}
  all_car_year = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    if item["total_sales"]>max_sales :
        max_sales = item["total_sales"]
        max_sales_car = item["car"]
    # TODO: also handle most popular car_year
    if all_car_year.get(item["car"]["car_year"])==None:
        all_car_year[item["car"]["car_year"]]= 0
    all_car_year[item["car"]["car_year"]] = all_car_year[item["car"]["car_year"]] + item["total_sales"]
  
  keymax = max(all_car_year, key= lambda x: all_car_year[x])
  value = all_car_year[keymax]
  summary = [
    "The {} generated the most revenue: ${}".format(
        format_car(max_revenue["car"]), max_revenue["revenue"]),"The {} had the most sales: {}".format(format_car(max_sales_car),max_sales),"The most popular year was {} with {} sales.".format(keymax,value)
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report
  table_data = cars_dict_to_table(data)
  body = '<br/>\n'.join(summary)
  reports.generate("/tmp/cars.pdf","Sales summary for last month",body,table_data)
  # TODO: send the PDF report as an email attachment
  mail_body = '\n'.join(summary)
  receiver = "{}@example.com".format(os.environ.get('USER'))
  sender = "automation@example.com"
  send_message = emails.generate(sender,receiver ,"Sales summary for last month",mail_body,"/tmp/cars.pdf")
  emails.send(send_message)

if __name__ == "__main__":
  main(sys.argv)
